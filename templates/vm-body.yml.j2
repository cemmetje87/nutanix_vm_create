# A base template for VM creation
# 
api_version: '3.1.0'
metadata:
  kind: vm
spec:
  cluster_reference:
    kind: cluster
    uuid: {{ cluster_uuid }}
  name: {{ vm.vm_name }}
  resources:
    disk_list:
    - data_source_reference:
        kind: image
        uuid: {{ vm.image_uuid }}
    - device_properties:
        disk_address:
          adapter_type: "IDE"
          device_index: 0
        device_type: "CDROM"
{% if vm.disk_list_mib %}
{% for disk in vm.disk_list_mib.split('-') %}
    - device_properties:
        device_type: "DISK"
{% if boot_type == "LEGACY" %}
        disk_address:
          device_index: {{ loop.index }}
          adapter_type: "SCSI"
      disk_size_mib: {{ disk }}
{% endif %}       
{% endfor %}
{% endif %}
    memory_size_mib: {{ vm.memory_mib }}
    nic_list:
    - nic_type: NORMAL_NIC
      is_connected: true
{% if vm.ip is defined %}
    - ip_endpoint_list:
      - ip: {{ vm.ip }}
{% endif %}
      subnet_reference:
        kind: subnet
        uuid: {{ vm.subnet_uuid }}
    boot_config:
      boot_device:
        disk_address:
          device_index: 0
          adapter_type: "SCSI"
    num_sockets: {{ vm.num_vcpu }}
    num_vcpus_per_socket: 1 
    power_state: 'ON'
{% if enable_ngt %}
    guest_tools:
      nutanix_guest_tools:
        state: "ENABLED"
        iso_mount_state: "MOUNTED"
{% endif %}
